name: CI

on:
  push:
    tags:
      - 'v*'

env:
  BINARY_PREFIX: "ohttps"
  BINARY_SUFFIX: ""
  COMMIT_ID: "${{ github.sha }}"
  PR_PROMPT: "::warning:: Build artifact will not be uploaded due to the workflow is trigged by pull request."

jobs:
  build:
    name: Build binary CI
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
      matrix:
        # build and publish in parallel: linux/386, linux/amd64, windows/386, windows/amd64, darwin/amd64, darwin/arm64
        goos: [linux, windows, darwin, end]
        goarch: ["386", amd64, arm, arm64, end]
        exclude:
          - goos: darwin
            goarch: arm
          - goos: darwin
            goarch: "386"
      fail-fast: true
    steps:
      - uses: actions/checkout@v2

      - name: Setup Go environment
        uses: actions/setup-go@v2.1.3
        if: matrix.goos != 'end' && matrix.goarch != 'end'
        with:
          go-version: 1.19

      - name: Cache downloaded module
        uses: actions/cache@v2
        if: matrix.goos != 'end' && matrix.goarch != 'end'
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ matrix.goos }}-${{ matrix.goarch }}-${{ hashFiles('**/go.sum') }}

      - name: Build binary file
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          IS_PR: ${{ !!github.head_ref }}
        if: matrix.goos != 'end' && matrix.goarch != 'end'
        run: |
          if [ $GOOS = "windows" ]; then export BINARY_SUFFIX="$BINARY_SUFFIX.exe"; fi
          if $IS_PR ; then echo $PR_PROMPT; fi
          export BINARY_NAME="$BINARY_PREFIX-$GOOS-$GOARCH$BINARY_SUFFIX"
          export CGO_ENABLED=0
          go build -o "output/$BINARY_NAME" -trimpath -ldflags "$LD_FLAGS" .

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        if: matrix.goos != 'end' && matrix.goarch != 'end'
        with:
          name: ${{ matrix.goos }}_${{ matrix.goarch }}
          path: output/

      - name: Upload to release
        uses: svenstaro/upload-release-action@v2
        if: matrix.goos != 'end' && matrix.goarch != 'end'
        with:
          repo_token: ${{ secrets.TOKEN }}
          file: "output/*"
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true


      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        if: matrix.goos == 'linux' && matrix.goarch == 'amd64'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        if: matrix.goos == 'linux' && matrix.goarch == 'amd64'

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        if: matrix.goos == 'linux' && matrix.goarch == 'amd64'
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Copy bin to docker
        if: matrix.goos == 'linux' && matrix.goarch == 'amd64'
        run: "cp -a output/* docker/ohttps-webhook"

      - name: Build docker image
        uses: docker/build-push-action@v5
        if: matrix.goos == 'linux' && matrix.goarch == 'amd64'
        with:
          context: docker
          push: false
          tags: mhmzx/ohttps-webhook:latest,mhmzx/ohttps-webhook:${{ github.ref }}

      - name: Delete workflow runs
        uses: GitRML/delete-workflow-runs@main
        if: matrix.goos == 'end' && matrix.goarch == 'end'
        with:
          token: ${{ secrets.TOKEN }}
          retain_days: 1
          keep_minimum_runs: 1

      - name: Remove old release
        uses: sgpublic/delete-release-action@v1.0
        if: matrix.goos == 'end' && matrix.goarch == 'end'
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          release-drop: false
          pre-release-drop: true
          pre-release-keep-count: 0
          pre-release-drop-tag: true
          draft-drop: true
